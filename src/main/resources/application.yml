
spring:

    #Current Profile
#    profiles.active: @spring.profile@
#    profile: @spring.profile@

#DataSource
    datasource:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/purchase?autoReconnect=true
        username: postgres
        password: postgres
## by setting this, the objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another.
        tomcat:
            test-on-borrow: true
            test-while-idle: true
## SQL query used to validate connections from the pool before returning them to the caller
            validation-query: select 1;
## used to avoid excess validation, only run validation at most at this frequency â€“ time in milliseconds. If a connection is due for validation, but has been validated previously within this interval, it will not be validated again. The larger the value, the better the performance, but you increase the chance of a stale connection being presented to your application.
            validation-interval: 34000
## Flag to remove abandoned connections if they exceed the removeAbandonedTimeout. A connection is considered abandoned and eligible for removal if it has been in use longer than the removeAbandonedTimeout. This way db connections can be recovered from applications that fail to close a connection.
            remove-abandoned: true
## timeout in seconds before an abandoned(in use) connection can be removed. The value should be set to the longest running query your applications might have.
            remove-abandoned-timeout: 55
## the maximum number of active connections that can be allocated from this pool at the same time.
            max-active: 100
## the maximum number of idle connections that should be kept in the pool at all times. Idle connections are checked periodically (if enabled) and connections that have been idle for longer than minEvictableIdleTimeMillis will be released
            max-idle: 8
## the minimum number of established connections that should be kept in the pool at all times. The connection pool can shrink below this number if validation queries fail.
            min-idle: 8
## the initial number of connections that are created when the pool is started
            initial-size: 5
## the minimum amount of time an object may sit idle in the pool before it is eligible for eviction.
            min-evictable-idle-time-millis: 55000
## the number of milliseconds to sleep between runs of the idle connection validation/cleaner thread. This value should not be set under 1 second. It dictates how often we check for idle, abandoned connections, and how often we validate idle connections.
            time-between-eviction-runs-millis: 34000
#spring.datasource.tomcat.type=org.apache.tomcat.jdbc.pool.DataSource

#Elasticsearch
    data.elasticsearch:
        clusterName: elasticsearch
        clusterNodes: localhost:9300
        repositories.enabled: true
        properties.http.enabled: true
        #spring.data.elasticsearch.path.home=@elastic.path@
        path.home: target/elastic


#Mail
    mail:
        host: smtp.gmail.com
        port: 587
        username: robot.grimmstory@gmail.com
        password:

        properties:
            mail:
                debug: true
                transport.protocol: smtp
                smtp.auth: true
                smtp.auth.mechanisms: XOAUTH2
                smtp.starttls.enable: true

#Multipart
    http:
        multipart:
            max-file-size: 5Mb
            max-request-size: 15Mb

#Jpa
## Disable Hibernate validation (For some reason this not working???)
    jpa:
        properties:
            javax.persistence.validation.mode: none
            hibernate.format_sql: false
## Set Hibernate ddl strategy
        hibernate.ddl-auto: none
        show-sql: false
        database-platform: org.hibernate.dialect.PostgreSQLDialect

#App
app:
    name: GrimmStory
    ip: ${@app.ip@:localhost}
    host: http://${app.ip}:${server.port}
    home: ${app.host}/#
    registration.result: ${app.home}/registration/result
    restore.result: ${app.home}/restore/result

server.port: 7878

#spring.resources.add-mappings=false
#spring.mvc.throw-exception-if-no-handler-found=true

#Logging
logging:
    level:
        root: info
        org.springframework.jdbc.core: ERROR
        org.springframework.web: ERROR
        org.apache.tomcat.jdbc: ERROR
        org.hibernate: ERROR

#Sms
sms.api_id: 68322532-51b1-d4b4-3dd5-752cf2c20589

#URL Shortener
gl.api_id: AIzaSyB7dIyZQNIMdM7xrsTR8SJmWTYknu9Q-1Q
gl.url: https://www.googleapis.com/urlshortener/v1/url?key=${gl.api_id}

#SSL
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=tomcat

#Flyway
flyway.enabled: false



# Cache control properties
#spring.resources.chain.cache=true
# cache Expire time 600 seconds
#spring.resources.cache-period=600
#spring.resources.chain.strategy.fixed.enabled=true
#.map means all related files to .js (e.g-.css,.jpg)
#spring.resources.chain.strategy.fixed.paths=/**/*.js,/**/*.map
#spring.resources.chain.strategy.fixed.version=test
#spring.resources.chain.strategy.content.enabled=true
#spring.resources.chain.html-application-cache=true