#DataSource
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://192.168.202.17:5432/pm?autoReconnect=true
spring.datasource.url=jdbc:postgresql://localhost:5432/purchase?autoReconnect=true
spring.datasource.username=postgres
#spring.datasource.username=kobzev
spring.datasource.password=postgres
# by setting this, the objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another.
spring.datasource.test-on-borrow=true
spring.datasource.test-while-idle=true
# SQL query used to validate connections from the pool before returning them to the caller
spring.datasource.validation-query=select 1;
# used to avoid excess validation, only run validation at most at this frequency â€“ time in milliseconds. If a connection is due for validation, but has been validated previously within this interval, it will not be validated again. The larger the value, the better the performance, but you increase the chance of a stale connection being presented to your application.
spring.datasource.validation-interval=34000
# Flag to remove abandoned connections if they exceed the removeAbandonedTimeout. A connection is considered abandoned and eligible for removal if it has been in use longer than the removeAbandonedTimeout. This way db connections can be recovered from applications that fail to close a connection.
spring.datasource.remove-abandoned=true
# timeout in seconds before an abandoned(in use) connection can be removed. The value should be set to the longest running query your applications might have.
spring.datasource.remove-abandoned-timeout=55
# the maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.max-active=100
# the maximum number of idle connections that should be kept in the pool at all times. Idle connections are checked periodically (if enabled) and connections that have been idle for longer than minEvictableIdleTimeMillis will be released
spring.datasource.max-idle=8
# the minimum number of established connections that should be kept in the pool at all times. The connection pool can shrink below this number if validation queries fail.
spring.datasource.min-idle=8
# the initial number of connections that are created when the pool is started
spring.datasource.initial-size=10
# the minimum amount of time an object may sit idle in the pool before it is eligible for eviction.
spring.datasource.min-evictable-idle-time-millis=55000
# the number of milliseconds to sleep between runs of the idle connection validation/cleaner thread. This value should not be set under 1 second. It dictates how often we check for idle, abandoned connections, and how often we validate idle connections.
spring.datasource.time-between-eviction-runs-millis=34000
spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource

#App
app.name=GrimmStory
multipart.maxFileSize=5Mb
multipart.maxRequestSize=15Mb
spring.profiles.active=Develop,Production

# Disable Hibernate validation (For some reason this not working???)
spring.jpa.properties.javax.persistence.validation.mode=none
# Set Hibernate ddl strategy
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

#Logging
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.apache.tomcat.jdbc=DEBUG

#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=robot.grimmstory@gmail.com
spring.mail.password=123qwe!@#0

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.debug=false
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false

#SSL
#server.port=7777
server.port=7878
#server.port=8443
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=25oct87!
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=tomcat

#ELASTICSEARCH
spring.data.elasticsearch.clusterName=elasticsearch
spring.data.elasticsearch.clusterNodes=localhost:9300
spring.data.elasticsearch.repositories.enabled=true
spring.data.elasticsearch.properties.http.enabled=true
#spring.data.elasticsearch.properties.path.home=target/elastic
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s